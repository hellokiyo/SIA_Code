import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;


// DB 접근 클래스 (직원정보 조회)
public class EmpDAO {

	static Properties props = new Properties();
	static FileReader fr;

	// 1번 
	public static Emp getEmpByFirstNLastName(String firstName, String lastName) throws Exception {
		
		Emp emp = new Emp();

		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getEmpByFirstNLastName"));
		stmt.setString(1, firstName);
		stmt.setString(2, lastName);
		ResultSet rs = stmt.executeQuery();

		while (rs.next()) {
			emp.employeeId = rs.getInt("employee_id");
			emp.email = rs.getString("email");
			emp.phoneNo = rs.getString("phone_number");
			emp.hireDate = rs.getString("hire_date");
			emp.jobId = rs.getString("job_id");
			emp.salary = rs.getInt("salary");
			emp.commission = rs.getDouble("commission_pct");
			emp.managerId = rs.getInt("manager_id");
			emp.departmentId = rs.getInt("department_id");
		}
		
		return emp;
		
	}

	// 2번
	public static List<Emp> getEmpListByYear(int year) throws Exception {
		List<Emp> result = new ArrayList<Emp>();

		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt1 = conn.prepareStatement(props.getProperty("getEmpListByYear"));
		stmt1.setInt(1, year);
		ResultSet rs = stmt1.executeQuery();

		while (rs.next()) {
			result.add(resultSetToEmp(rs));
		}

		return result;
	}

	// 3번
	public static List<Emp> getEmpListBydepId(int depId) throws Exception {
		List<Emp> result = new ArrayList<Emp>();
		
		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getEmpListBydepId"));
		stmt.setInt(1, depId);
		ResultSet rs = stmt.executeQuery();

		while (rs.next()) { 
			result.add(resultSetToEmp(rs));
		}
		return result;
	}

	// 4번
	public static List<Emp> getEmpListByjobId(String jobId) throws Exception {
		List<Emp> result = new ArrayList<Emp>();
		
		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getEmpListByjobId"));
		stmt.setString(1, jobId);
		ResultSet rs = stmt.executeQuery();
		
		while (rs.next()) { 
			result.add(resultSetToEmp(rs));
		}
		return result; 

	}

	// 5번
	public static List<Emp> getEmpListBycityId(String cityId) throws Exception {
		List<Emp> result = new ArrayList<Emp>();

		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getEmpListBycityId"));
		stmt.setString(1, cityId);
		ResultSet rs = stmt.executeQuery();

		while (rs.next()) {
			result.add(resultSetToEmp(rs));
		}
		return result;
	}

	// 6번
	public static List<Emp> getDeptHeadLastName(String getLastName) throws Exception {
		List<Emp> result = new ArrayList<Emp>(); 

		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getDeptHeadFistName"));
		stmt.setString(1, getLastName); 
		ResultSet rs = stmt.executeQuery(); 

		while (rs.next()) {
			result.add(resultSetToEmp(rs));
		}
		return result; 
	}

	// 7번
	public static List<Emp> getEmpListByCountryName(String cityName) throws Exception {
		List<Emp> result = new ArrayList<Emp>(); 

		fr = new FileReader("db-info.properties");
		props.load(fr);
		Connection conn = DriverManager.getConnection(props.getProperty("url"), props.getProperty("userName"),
				props.getProperty("password"));
		PreparedStatement stmt = conn.prepareStatement(props.getProperty("getEmpListByCountryName"));
		stmt.setString(1, cityName);
		ResultSet rs = stmt.executeQuery();

		while (rs.next()) { 
			result.add(resultSetToEmp(rs));
		}

		return result;

	}
	
	public static Emp resultSetToEmp(ResultSet rs) throws Exception {
		Emp emp = new Emp(); 
		emp.employeeId = rs.getInt("employee_id");
		emp.firstName = rs.getString("first_name");
		emp.lastName = rs.getString("last_name");
		emp.email = rs.getString("email");
		emp.phoneNo = rs.getString("phone_number");
		emp.hireDate = rs.getString("hire_date");
		emp.jobId = rs.getString("job_id");
		emp.salary = rs.getInt("salary");
		emp.commission = rs.getDouble("commission_pct");
		emp.managerId = rs.getInt("manager_id");
		emp.departmentId = rs.getInt("department_id");
		return emp;
	}

}